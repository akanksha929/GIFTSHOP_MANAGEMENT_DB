
-- EASY QUESTIONS:
/* 1. A customer want to buy chocolates. Show all the products under chocolate category. */
SELECT product_name, price FROM Products WHERE category_id = 3; 

/* 2.	How many sales were made ‘online’? */
SELECT COUNT(*) FROM SalesChannels WHERE channel_type = 'online';

/* 3.	Arrange the categories on the basic of profit margin. */
SELECT * from ProfitMargins ORDER BY profit_margin;

/* 4.  List all sales that were made on '2024-07-01'. */
SELECT *
FROM SalesDetails
WHERE DATE(sale_date) = '2024-07-01';

/* 5.  Show all the products along with their respective buyer names. */ 
SELECT p.product_name, b.buyer_name
FROM Products p
JOIN Buyers b ON p.buyer_id = b.buyer_id;

-- MODERATE QUESTION SET:
/* 1.  Find the total sales amount for each product category. */
SELECT c.category_name, SUM(sd.total_amount) AS total_sales
FROM SalesDetails sd
JOIN Products p ON sd.product_id = p.product_id
JOIN Categories c ON p.category_id = c.category_id
GROUP BY c.category_name;

/* 2.  Get the details of sales made by customers who are aged 25 or older. */
SELECT c.full_name, c.age, sd.sale_id, sd.sale_date, sd.total_amount
FROM Customers c
JOIN SalesDetails sd ON c.sale_id = sd.sale_id
WHERE c.age <= 25;

/* 3.  Which products have never been sold? */
SELECT p.product_name
FROM Products p
LEFT JOIN SalesDetails sd ON p.product_id = sd.product_id
WHERE sd.sale_id IS NULL;

/* 4.  Find the number of sales made by each sales channel type. */
SELECT sc.channel_type, COUNT(sd.sale_id) AS sales_count
FROM SalesChannels sc
JOIN SalesDetails sd ON sc.sale_id = sd.sale_id
GROUP BY sc.channel_type;

/* 5.. Find the total number of products available in each category. */
SELECT category_id, COUNT(*) AS total_products
FROM Products
GROUP BY category_id;


-- HARD QUESTION SET:
/* 1.  Calculate the total profit generated by each product category, considering profit margins. */
SELECT c.category_name, SUM(sd.total_amount * (pm.profit_margin / 100)) AS total_profit
FROM SalesDetails sd
JOIN Products p ON sd.product_id = p.product_id
JOIN Categories c ON p.category_id = c.category_id
JOIN ProfitMargins pm ON c.category_id = pm.category_id
GROUP BY c.category_name;

/* 2.  Calculate the average age of customers who bought products from each category. */
SELECT c.category_name, AVG(cu.age) AS avg_age
FROM Customers cu
JOIN SalesDetails sd ON cu.sale_id = sd.sale_id
JOIN Products p ON sd.product_id = p.product_id
JOIN Categories c ON p.category_id = c.category_id
GROUP BY c.category_name;

/* 3.  Find the top 3 products that contributed to the highest total sales amount. */
SELECT p.product_name, SUM(sd.total_amount) AS total_revenue
FROM SalesDetails sd
JOIN Products p ON sd.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 3;









 
